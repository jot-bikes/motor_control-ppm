ARM GAS  /tmp/ccs4W2O0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	CDC_DeInit_FS:
  26              	.LFB134:
  27              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v1.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** 
  25:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  26:Src/usbd_cdc_if.c **** 
  27:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  28:Src/usbd_cdc_if.c **** 
  29:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  31:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccs4W2O0.s 			page 2


  32:Src/usbd_cdc_if.c **** 
  33:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  34:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** 
  36:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  37:Src/usbd_cdc_if.c **** 
  38:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  39:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  40:Src/usbd_cdc_if.c ****   * @{
  41:Src/usbd_cdc_if.c ****   */
  42:Src/usbd_cdc_if.c **** 
  43:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  44:Src/usbd_cdc_if.c ****   * @{
  45:Src/usbd_cdc_if.c ****   */
  46:Src/usbd_cdc_if.c **** 
  47:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  48:Src/usbd_cdc_if.c ****   * @brief Private types.
  49:Src/usbd_cdc_if.c ****   * @{
  50:Src/usbd_cdc_if.c ****   */
  51:Src/usbd_cdc_if.c **** 
  52:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_cdc_if.c **** 
  56:Src/usbd_cdc_if.c **** /**
  57:Src/usbd_cdc_if.c ****   * @}
  58:Src/usbd_cdc_if.c ****   */
  59:Src/usbd_cdc_if.c **** 
  60:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  61:Src/usbd_cdc_if.c ****   * @brief Private defines.
  62:Src/usbd_cdc_if.c ****   * @{
  63:Src/usbd_cdc_if.c ****   */
  64:Src/usbd_cdc_if.c **** 
  65:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  66:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  67:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  68:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE 2048
  69:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE 2048
  70:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /**
  73:Src/usbd_cdc_if.c ****   * @}
  74:Src/usbd_cdc_if.c ****   */
  75:Src/usbd_cdc_if.c **** 
  76:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  77:Src/usbd_cdc_if.c ****   * @brief Private macros.
  78:Src/usbd_cdc_if.c ****   * @{
  79:Src/usbd_cdc_if.c ****   */
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  82:Src/usbd_cdc_if.c **** 
  83:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /**
  86:Src/usbd_cdc_if.c ****   * @}
  87:Src/usbd_cdc_if.c ****   */
  88:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccs4W2O0.s 			page 3


  89:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
  90:Src/usbd_cdc_if.c ****   * @brief Private variables.
  91:Src/usbd_cdc_if.c ****   * @{
  92:Src/usbd_cdc_if.c ****   */
  93:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  94:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  95:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  96:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
  97:Src/usbd_cdc_if.c **** 
  98:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
  99:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 102:Src/usbd_cdc_if.c **** 
 103:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 104:Src/usbd_cdc_if.c **** 
 105:Src/usbd_cdc_if.c **** /**
 106:Src/usbd_cdc_if.c ****   * @}
 107:Src/usbd_cdc_if.c ****   */
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 110:Src/usbd_cdc_if.c ****   * @brief Public variables.
 111:Src/usbd_cdc_if.c ****   * @{
 112:Src/usbd_cdc_if.c ****   */
 113:Src/usbd_cdc_if.c **** 
 114:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 115:Src/usbd_cdc_if.c **** 
 116:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 117:Src/usbd_cdc_if.c **** 
 118:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 119:Src/usbd_cdc_if.c **** 
 120:Src/usbd_cdc_if.c **** /**
 121:Src/usbd_cdc_if.c ****   * @}
 122:Src/usbd_cdc_if.c ****   */
 123:Src/usbd_cdc_if.c **** 
 124:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 125:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 126:Src/usbd_cdc_if.c ****   * @{
 127:Src/usbd_cdc_if.c ****   */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 130:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 131:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t *pbuf, uint16_t length);
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t *pbuf, uint32_t *Len);
 133:Src/usbd_cdc_if.c **** 
 134:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 135:Src/usbd_cdc_if.c **** 
 136:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 137:Src/usbd_cdc_if.c **** 
 138:Src/usbd_cdc_if.c **** /**
 139:Src/usbd_cdc_if.c ****   * @}
 140:Src/usbd_cdc_if.c ****   */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 143:Src/usbd_cdc_if.c ****     {
 144:Src/usbd_cdc_if.c ****         CDC_Init_FS,
 145:Src/usbd_cdc_if.c ****         CDC_DeInit_FS,
ARM GAS  /tmp/ccs4W2O0.s 			page 4


 146:Src/usbd_cdc_if.c ****         CDC_Control_FS,
 147:Src/usbd_cdc_if.c ****         CDC_Receive_FS};
 148:Src/usbd_cdc_if.c **** 
 149:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 150:Src/usbd_cdc_if.c **** /**
 151:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 152:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 153:Src/usbd_cdc_if.c ****   */
 154:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 155:Src/usbd_cdc_if.c **** {
 156:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 157:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 158:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 160:Src/usbd_cdc_if.c ****   return (USBD_OK);
 161:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 162:Src/usbd_cdc_if.c **** }
 163:Src/usbd_cdc_if.c **** 
 164:Src/usbd_cdc_if.c **** /**
 165:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 166:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 167:Src/usbd_cdc_if.c ****   */
 168:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 169:Src/usbd_cdc_if.c **** {
  28              		.loc 1 169 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 170:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 171:Src/usbd_cdc_if.c ****   return (USBD_OK);
  33              		.loc 1 171 3 view .LVU1
 172:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 173:Src/usbd_cdc_if.c **** }
  34              		.loc 1 173 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE134:
  40              		.section	.text.CDC_Control_FS,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	CDC_Control_FS:
  48              	.LVL0:
  49              	.LFB135:
 174:Src/usbd_cdc_if.c **** 
 175:Src/usbd_cdc_if.c **** /**
 176:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 177:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 178:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 179:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 180:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 181:Src/usbd_cdc_if.c ****   */
 182:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t *pbuf, uint16_t length)
ARM GAS  /tmp/ccs4W2O0.s 			page 5


 183:Src/usbd_cdc_if.c **** {
  50              		.loc 1 183 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 184:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 185:Src/usbd_cdc_if.c ****   switch (cmd)
  55              		.loc 1 185 3 view .LVU4
 186:Src/usbd_cdc_if.c ****   {
 187:Src/usbd_cdc_if.c ****   case CDC_SEND_ENCAPSULATED_COMMAND:
 188:Src/usbd_cdc_if.c **** 
 189:Src/usbd_cdc_if.c ****     break;
 190:Src/usbd_cdc_if.c **** 
 191:Src/usbd_cdc_if.c ****   case CDC_GET_ENCAPSULATED_RESPONSE:
 192:Src/usbd_cdc_if.c **** 
 193:Src/usbd_cdc_if.c ****     break;
 194:Src/usbd_cdc_if.c **** 
 195:Src/usbd_cdc_if.c ****   case CDC_SET_COMM_FEATURE:
 196:Src/usbd_cdc_if.c **** 
 197:Src/usbd_cdc_if.c ****     break;
 198:Src/usbd_cdc_if.c **** 
 199:Src/usbd_cdc_if.c ****   case CDC_GET_COMM_FEATURE:
 200:Src/usbd_cdc_if.c **** 
 201:Src/usbd_cdc_if.c ****     break;
 202:Src/usbd_cdc_if.c **** 
 203:Src/usbd_cdc_if.c ****   case CDC_CLEAR_COMM_FEATURE:
 204:Src/usbd_cdc_if.c **** 
 205:Src/usbd_cdc_if.c ****     break;
 206:Src/usbd_cdc_if.c **** 
 207:Src/usbd_cdc_if.c ****     /*******************************************************************************/
 208:Src/usbd_cdc_if.c ****     /* Line Coding Structure                                                       */
 209:Src/usbd_cdc_if.c ****     /*-----------------------------------------------------------------------------*/
 210:Src/usbd_cdc_if.c ****     /* Offset | Field       | Size | Value  | Description                          */
 211:Src/usbd_cdc_if.c ****     /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 212:Src/usbd_cdc_if.c ****     /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 213:Src/usbd_cdc_if.c ****     /*                                        0 - 1 Stop bit                       */
 214:Src/usbd_cdc_if.c ****     /*                                        1 - 1.5 Stop bits                    */
 215:Src/usbd_cdc_if.c ****     /*                                        2 - 2 Stop bits                      */
 216:Src/usbd_cdc_if.c ****     /* 5      | bParityType |  1   | Number | Parity                               */
 217:Src/usbd_cdc_if.c ****     /*                                        0 - None                             */
 218:Src/usbd_cdc_if.c ****     /*                                        1 - Odd                              */
 219:Src/usbd_cdc_if.c ****     /*                                        2 - Even                             */
 220:Src/usbd_cdc_if.c ****     /*                                        3 - Mark                             */
 221:Src/usbd_cdc_if.c ****     /*                                        4 - Space                            */
 222:Src/usbd_cdc_if.c ****     /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 223:Src/usbd_cdc_if.c ****     /*******************************************************************************/
 224:Src/usbd_cdc_if.c ****   case CDC_SET_LINE_CODING:
 225:Src/usbd_cdc_if.c **** 
 226:Src/usbd_cdc_if.c ****     break;
 227:Src/usbd_cdc_if.c **** 
 228:Src/usbd_cdc_if.c ****   case CDC_GET_LINE_CODING:
 229:Src/usbd_cdc_if.c **** 
 230:Src/usbd_cdc_if.c ****     break;
 231:Src/usbd_cdc_if.c **** 
 232:Src/usbd_cdc_if.c ****   case CDC_SET_CONTROL_LINE_STATE:
 233:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccs4W2O0.s 			page 6


 234:Src/usbd_cdc_if.c ****     break;
 235:Src/usbd_cdc_if.c **** 
 236:Src/usbd_cdc_if.c ****   case CDC_SEND_BREAK:
 237:Src/usbd_cdc_if.c **** 
 238:Src/usbd_cdc_if.c ****     break;
 239:Src/usbd_cdc_if.c **** 
 240:Src/usbd_cdc_if.c ****   default:
 241:Src/usbd_cdc_if.c ****     break;
 242:Src/usbd_cdc_if.c ****   }
 243:Src/usbd_cdc_if.c **** 
 244:Src/usbd_cdc_if.c ****   return (USBD_OK);
  56              		.loc 1 244 3 view .LVU5
 245:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 246:Src/usbd_cdc_if.c **** }
  57              		.loc 1 246 1 is_stmt 0 view .LVU6
  58 0000 0020     		movs	r0, #0
  59              	.LVL1:
  60              		.loc 1 246 1 view .LVU7
  61 0002 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE135:
  65              		.section	.text.CDC_Init_FS,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	CDC_Init_FS:
  73              	.LFB133:
 155:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
  74              		.loc 1 155 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 158:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
  83              		.loc 1 158 3 view .LVU9
  84 0002 064C     		ldr	r4, .L5
  85 0004 0022     		movs	r2, #0
  86 0006 0649     		ldr	r1, .L5+4
  87 0008 2046     		mov	r0, r4
  88 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
  89              	.LVL2:
 159:Src/usbd_cdc_if.c ****   return (USBD_OK);
  90              		.loc 1 159 3 view .LVU10
  91 000e 0549     		ldr	r1, .L5+8
  92 0010 2046     		mov	r0, r4
  93 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  94              	.LVL3:
 160:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
  95              		.loc 1 160 3 view .LVU11
 162:Src/usbd_cdc_if.c **** 
  96              		.loc 1 162 1 is_stmt 0 view .LVU12
ARM GAS  /tmp/ccs4W2O0.s 			page 7


  97 0016 0020     		movs	r0, #0
  98 0018 10BD     		pop	{r4, pc}
  99              	.L6:
 100 001a 00BF     		.align	2
 101              	.L5:
 102 001c 00000000 		.word	hUsbDeviceFS
 103 0020 00000000 		.word	UserTxBufferFS
 104 0024 00000000 		.word	UserRxBufferFS
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 109              		.align	1
 110              		.global	CDC_Transmit_FS
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	CDC_Transmit_FS:
 117              	.LVL4:
 118              	.LFB137:
 247:Src/usbd_cdc_if.c **** 
 248:Src/usbd_cdc_if.c **** /**
 249:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 250:Src/usbd_cdc_if.c ****   *         through this function.
 251:Src/usbd_cdc_if.c ****   *
 252:Src/usbd_cdc_if.c ****   *         @note
 253:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 254:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 255:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 256:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 257:Src/usbd_cdc_if.c ****   *
 258:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 259:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 260:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 261:Src/usbd_cdc_if.c ****   */
 262:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t *Buf, uint32_t *Len)
 263:Src/usbd_cdc_if.c **** {
 264:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 265:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 266:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 267:Src/usbd_cdc_if.c ****   CDC_ReceiveCallBack(Buf, Len[0]);
 268:Src/usbd_cdc_if.c ****   return (USBD_OK);
 269:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 270:Src/usbd_cdc_if.c **** }
 271:Src/usbd_cdc_if.c **** 
 272:Src/usbd_cdc_if.c **** /**
 273:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 274:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 275:Src/usbd_cdc_if.c ****   *         through this function.
 276:Src/usbd_cdc_if.c ****   *         @note
 277:Src/usbd_cdc_if.c ****   *
 278:Src/usbd_cdc_if.c ****   *
 279:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 280:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 281:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 282:Src/usbd_cdc_if.c ****   */
 283:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t *Buf, uint16_t Len)
ARM GAS  /tmp/ccs4W2O0.s 			page 8


 284:Src/usbd_cdc_if.c **** {
 119              		.loc 1 284 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 123              		.loc 1 285 3 view .LVU14
 286:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 287:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)hUsbDeviceFS.pClassData;
 124              		.loc 1 287 3 view .LVU15
 125              		.loc 1 287 27 is_stmt 0 view .LVU16
 126 0000 094B     		ldr	r3, .L15
 127 0002 D3F89032 		ldr	r3, [r3, #656]
 128              	.LVL5:
 288:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0)
 129              		.loc 1 288 3 is_stmt 1 view .LVU17
 130              		.loc 1 288 11 is_stmt 0 view .LVU18
 131 0006 D3F81432 		ldr	r3, [r3, #532]
 132              	.LVL6:
 133              		.loc 1 288 6 view .LVU19
 134 000a 0BB1     		cbz	r3, .L14
 289:Src/usbd_cdc_if.c ****   {
 290:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 135              		.loc 1 290 12 view .LVU20
 136 000c 0120     		movs	r0, #1
 137              	.LVL7:
 291:Src/usbd_cdc_if.c ****   }
 292:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 293:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 294:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 295:Src/usbd_cdc_if.c ****   return result;
 296:Src/usbd_cdc_if.c **** }
 138              		.loc 1 296 1 view .LVU21
 139 000e 7047     		bx	lr
 140              	.LVL8:
 141              	.L14:
 284:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 142              		.loc 1 284 1 view .LVU22
 143 0010 10B5     		push	{r4, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 148 0012 0A46     		mov	r2, r1
 149 0014 0146     		mov	r1, r0
 150              	.LVL9:
 292:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 151              		.loc 1 292 3 is_stmt 1 view .LVU23
 152 0016 044C     		ldr	r4, .L15
 153              	.LVL10:
 292:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 154              		.loc 1 292 3 is_stmt 0 view .LVU24
 155 0018 2046     		mov	r0, r4
 156              	.LVL11:
 292:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 157              		.loc 1 292 3 view .LVU25
 158 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
ARM GAS  /tmp/ccs4W2O0.s 			page 9


 159              	.LVL12:
 293:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 160              		.loc 1 293 3 is_stmt 1 view .LVU26
 293:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 161              		.loc 1 293 12 is_stmt 0 view .LVU27
 162 001e 2046     		mov	r0, r4
 163 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 164              	.LVL13:
 295:Src/usbd_cdc_if.c **** }
 165              		.loc 1 295 3 is_stmt 1 view .LVU28
 166              		.loc 1 296 1 is_stmt 0 view .LVU29
 167 0024 10BD     		pop	{r4, pc}
 168              	.L16:
 169 0026 00BF     		.align	2
 170              	.L15:
 171 0028 00000000 		.word	hUsbDeviceFS
 172              		.cfi_endproc
 173              	.LFE137:
 175              		.section	.text.CDC_ReceiveCallBack,"ax",%progbits
 176              		.align	1
 177              		.weak	CDC_ReceiveCallBack
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	CDC_ReceiveCallBack:
 184              	.LVL14:
 185              	.LFB138:
 297:Src/usbd_cdc_if.c **** 
 298:Src/usbd_cdc_if.c **** __weak void CDC_ReceiveCallBack(uint8_t *buf, uint32_t len)
 299:Src/usbd_cdc_if.c **** {
 186              		.loc 1 299 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 300:Src/usbd_cdc_if.c **** }
 191              		.loc 1 300 1 view .LVU31
 192 0000 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE138:
 196              		.section	.text.CDC_Receive_FS,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	CDC_Receive_FS:
 204              	.LVL15:
 205              	.LFB136:
 263:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 206              		.loc 1 263 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 263:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 210              		.loc 1 263 1 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccs4W2O0.s 			page 10


 211 0000 70B5     		push	{r4, r5, r6, lr}
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 16
 214              		.cfi_offset 4, -16
 215              		.cfi_offset 5, -12
 216              		.cfi_offset 6, -8
 217              		.cfi_offset 14, -4
 218 0002 0446     		mov	r4, r0
 219 0004 0E46     		mov	r6, r1
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 220              		.loc 1 265 3 is_stmt 1 view .LVU34
 221 0006 074D     		ldr	r5, .L20
 222 0008 0146     		mov	r1, r0
 223              	.LVL16:
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 224              		.loc 1 265 3 is_stmt 0 view .LVU35
 225 000a 2846     		mov	r0, r5
 226              	.LVL17:
 265:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 227              		.loc 1 265 3 view .LVU36
 228 000c FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 229              	.LVL18:
 266:Src/usbd_cdc_if.c ****   CDC_ReceiveCallBack(Buf, Len[0]);
 230              		.loc 1 266 3 is_stmt 1 view .LVU37
 231 0010 2846     		mov	r0, r5
 232 0012 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 233              	.LVL19:
 267:Src/usbd_cdc_if.c ****   return (USBD_OK);
 234              		.loc 1 267 3 view .LVU38
 235 0016 3168     		ldr	r1, [r6]
 236 0018 2046     		mov	r0, r4
 237 001a FFF7FEFF 		bl	CDC_ReceiveCallBack
 238              	.LVL20:
 268:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 239              		.loc 1 268 3 view .LVU39
 270:Src/usbd_cdc_if.c **** 
 240              		.loc 1 270 1 is_stmt 0 view .LVU40
 241 001e 0020     		movs	r0, #0
 242 0020 70BD     		pop	{r4, r5, r6, pc}
 243              	.LVL21:
 244              	.L21:
 270:Src/usbd_cdc_if.c **** 
 245              		.loc 1 270 1 view .LVU41
 246 0022 00BF     		.align	2
 247              	.L20:
 248 0024 00000000 		.word	hUsbDeviceFS
 249              		.cfi_endproc
 250              	.LFE136:
 252              		.global	USBD_Interface_fops_FS
 253              		.comm	UserTxBufferFS,2048,4
 254              		.comm	UserRxBufferFS,2048,4
 255              		.comm	htim1,64,4
 256              		.comm	hdma_adc1,96,4
 257              		.comm	hadc1,72,4
 258              		.section	.data.USBD_Interface_fops_FS,"aw"
 259              		.align	2
 262              	USBD_Interface_fops_FS:
ARM GAS  /tmp/ccs4W2O0.s 			page 11


 263 0000 00000000 		.word	CDC_Init_FS
 264 0004 00000000 		.word	CDC_DeInit_FS
 265 0008 00000000 		.word	CDC_Control_FS
 266 000c 00000000 		.word	CDC_Receive_FS
 267              		.text
 268              	.Letext0:
 269              		.file 2 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 270              		.file 3 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 271              		.file 4 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 272              		.file 5 "/opt/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 273              		.file 6 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 274              		.file 7 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 275              		.file 8 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdlib.h"
 276              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 277              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 278              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 279              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 280              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 281              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 282              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 283              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 284              		.file 17 "Inc/main.h"
 285              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 286              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 287              		.file 20 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccs4W2O0.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
     /tmp/ccs4W2O0.s:18     .text.CDC_DeInit_FS:0000000000000000 $t
     /tmp/ccs4W2O0.s:25     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
     /tmp/ccs4W2O0.s:41     .text.CDC_Control_FS:0000000000000000 $t
     /tmp/ccs4W2O0.s:47     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
     /tmp/ccs4W2O0.s:66     .text.CDC_Init_FS:0000000000000000 $t
     /tmp/ccs4W2O0.s:72     .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
     /tmp/ccs4W2O0.s:102    .text.CDC_Init_FS:000000000000001c $d
                            *COM*:0000000000000800 UserTxBufferFS
                            *COM*:0000000000000800 UserRxBufferFS
     /tmp/ccs4W2O0.s:109    .text.CDC_Transmit_FS:0000000000000000 $t
     /tmp/ccs4W2O0.s:116    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
     /tmp/ccs4W2O0.s:171    .text.CDC_Transmit_FS:0000000000000028 $d
     /tmp/ccs4W2O0.s:176    .text.CDC_ReceiveCallBack:0000000000000000 $t
     /tmp/ccs4W2O0.s:183    .text.CDC_ReceiveCallBack:0000000000000000 CDC_ReceiveCallBack
     /tmp/ccs4W2O0.s:197    .text.CDC_Receive_FS:0000000000000000 $t
     /tmp/ccs4W2O0.s:203    .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
     /tmp/ccs4W2O0.s:248    .text.CDC_Receive_FS:0000000000000024 $d
     /tmp/ccs4W2O0.s:262    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
                            *COM*:0000000000000040 htim1
                            *COM*:0000000000000060 hdma_adc1
                            *COM*:0000000000000048 hadc1
     /tmp/ccs4W2O0.s:259    .data.USBD_Interface_fops_FS:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetTxBuffer
USBD_CDC_SetRxBuffer
hUsbDeviceFS
USBD_CDC_TransmitPacket
USBD_CDC_ReceivePacket
